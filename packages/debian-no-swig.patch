diff --git a/debian/control b/debian/control
index 929af9ab0b79..b938737a92ed 100644
--- a/debian/control
+++ b/debian/control
@@ -8,13 +8,9 @@ Standards-Version: 4.5.0
 Build-Depends:
  bison,
  cmake,
- debhelper (>= 11~),
- dh-python,
+ debhelper,
  libcmocka-dev <!nocheck>,
  libpcre3-dev,
- swig (>= 3.0.12),
- python3-all-dev,
- python3-all-dbg,
  pkg-config
 Vcs-Browser: https://github.com/CESNET/libyang/tree/debian
 Vcs-Git: https://github.com/CESNET/libyang.git -b debian
@@ -67,57 +63,3 @@ Description: parser toolkit for IETF YANG data modeling - executable tools
  during the creation of IETF YANG schemas.  The tools are not generally
  useful for normal operation where libyang primarily processes configuration
  data, not schemas.
-
-Package: libyang-cpp1
-Depends:
- ${misc:Depends},
- ${shlibs:Depends},
- libyang1 (= ${binary:Version})
-Architecture: any
-Description: parser toolkit for IETF YANG data modeling - C++ runtime
- Partially SWIG-generated bindings to use libyang with a C++ API.
- The functionality is the same as in libyang, the C++ code links wraps
- and uses libyang C code.
-
-Package: libyang-cpp-dev
-Depends:
- ${misc:Depends},
- libyang-cpp1 (= ${binary:Version}),
- libyang-dev (= ${binary:Version})
-Section: libdevel
-Architecture: any
-Description: parser toolkit for IETF YANG data modeling - C++ development files
- Partially SWIG-generated bindings to use libyang with a C++ API.
- The functionality is the same as in libyang, the C++ code links wraps
- and uses libyang C code.
- .
- This is the accompanying development package, containing headers, a
- pkgconfig file, and .so entry point for the libyang C++ bindings.
-
-Package: python3-yang
-Depends:
- ${misc:Depends},
- ${shlibs:Depends},
- ${python3:Depends},
- libyang-cpp1 (= ${binary:Version})
-Section: python
-Architecture: any
-Description: parser toolkit for IETF YANG data modeling - python3 support
- This package allows using libyang functionality to load IETF YANG models
- and data from Python3 code.
- .
- The bindings are partially generated by SWIG.
-
-Package: python3-yang-dbg
-Depends:
- ${misc:Depends},
- ${shlibs:Depends},
- ${python3:Depends},
- python3-yang (=${binary:Version})
-Section: debug
-Architecture: any
-Description: parser toolkit for IETF YANG data modeling - python3 debug
- This package allows using libyang functionality to load IETF YANG models
- and data from Python3 code.
- .
- This package contains support for debug versions of Python.
diff --git a/debian/rules b/debian/rules
index 9b173b8e6d5b..f49054a1c105 100755
--- a/debian/rules
+++ b/debian/rules
@@ -5,49 +5,14 @@ export DEB_BUILD_MAINT_OPTIONS = hardening=+all
 include /usr/share/dpkg/architecture.mk
 
 %:
-	dh $@ --with python3
+	dh $@
 
 override_dh_auto_configure:
 	dh_auto_configure -- \
 		-DCMAKE_BUILD_TYPE:String="Package" \
 		-DENABLE_LYD_PRIV=ON \
-		-DGEN_LANGUAGE_BINDINGS=ON \
-		-DGEN_JAVA_BINDINGS=OFF \
-		-DGEN_JAVASCRIPT_BINDINGS=OFF \
-		-DGEN_PYTHON_VERSION=`/usr/bin/py3versions -s | sed \
-			-e 's/python\(3\.[0-7]\)/\1;\1dm/g' \
-			-e 's/python\([^ ]\+\)/\1;\1d/g' \
-			-e 's/ /;/g'`
-
-# building the SWIG generated Python bindings uses >= 1.5GB RAM per each
-# g++ process, and this will be attempted in parallel.  Just build these bits
-# in sequence to avoid OOM build failures.
-
-override_dh_auto_build:
-	dh_auto_build -- yang libyang-cpp
-	set -e; /usr/bin/py3versions -s | sed \
-			-e 's/python\(3\.[0-7]\)/\1 \1dm/g' \
-			-e 's/python\([^ ]\+\)/\1 \1d/g' \
-			-e 's/ /\n/g' | while read V; do \
-		dh_auto_build --no-parallel -- _yang$${V}; \
-	done
-	dh_auto_build
-
-override_dh_auto_install:
-	dh_auto_install
-	-rm -rf debian/tmp/usr/lib/python3
-	set -e; /usr/bin/py3versions -s | sed -e 's/python\([^ ]\+\)/\1/g' -e 's/ /\n/g' | while read V; do \
-		make -C obj-$(DEB_HOST_GNU_TYPE)/swig/python$${V} DESTDIR=`pwd`/debian/python3-yang     install; \
-	done
-	set -e; /usr/bin/py3versions -s | sed -e 's/python\(3\.[0-7]\)/\1dm/g' -e 's/python\([^ ]\+\)/\1d/g' -e 's/ /\n/g' | while read V; do \
-		make -C obj-$(DEB_HOST_GNU_TYPE)/swig/python$${V} DESTDIR=`pwd`/debian/python3-yang-dbg install; \
-	done
-	-rm -rf debian/python3-yang/usr/include
-	-rm -rf debian/python3-yang-dbg/usr/include
-
-override_dh_strip:
-	dh_strip -Npython3-yang-dbg -Npython3-yang
-	dh_strip -ppython3-yang --dbg-package=python3-yang-dbg
+		-DGEN_LANGUAGE_BINDINGS=OFF \
+		# end
 
 override_dh_makeshlibs:
 	dh_makeshlibs -Xextensions -Xuser_types
